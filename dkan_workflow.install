<?php
/**
 * @file
 * Installation procedures for dkan_workflow.
 */

/**
 * Implements hook_install().
 */
function dkan_workflow_install() {
  $item = array(
    'link_path' => 'admin/workbench',
    'link_title' => 'My Workbench',
    'menu_name' => 'main-menu',
    'weight' => -50,
    'expanded' => 0,
  );

  $item_id = menu_link_save($item);
  dkan_workflow_revert_views();
}

/**
 * Implements hook_enable().
 *
 * Enable moderation settings for dataset and resource upon install. This config
 * updates the node_option_* variables exported by dkan_dataset by removing
 * conflicting node publishing options and adding required ones to the array.
 * This update is kept persistante using hook_strongarm_alter().
 */
function dkan_workflow_enable() {
  foreach (array('dataset', 'resource') as $type) {
    $var_name = 'node_options_' . $type;
    $options_remove =  array('status');
    $options_add = array('moderation', 'revision');

    $node_options = variable_get($var_name, array());
    // Remove conflicting options if set,
    $node_options = array_diff($node_options, $options_remove);
    // Add required options if not set.
    $node_options = array_values(array_unique(array_merge($node_options, $options_add), SORT_REGULAR));
    variable_set($var_name, $node_options);
  }
}

/**
 * Implements hook_update_N().
 */
function dkan_workflow_update_7001() {
  dkan_workflow_revert_views();
  return t('DKAN Workflow views have been reverted.');
}

/**
 * Reverts Views.
 */
function dkan_workflow_revert_views() {
  ctools_include('object-cache');
  $files = file_scan_directory(drupal_get_path('module', 'dkan_workflow') . '/views', '/.*\.view.inc$/');
  foreach ($files as $filepath => $file) {
    require $filepath;
    if (isset($view)) {
      $view->delete();
      ctools_object_cache_clear('view', $view->name);
    }
  }
}
